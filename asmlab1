.model small
.stack 100h
.data
size dw 0h
String db 'Enter a line: $'
Stg db 100h dup(0h);array for a line
.code
start:
    mov ax, @data;
    mov ds, ax;
    mov ah, 0h; screen cleaning
    mov al, 2h;
    int 10h
    mov ah, 09h
    Lea dx, String
    int 21h
    mov ah, 1h  ;char input  
    mov si, 0h
    mov bx, 0h
Input:    
    int 21h
    mov cx, si
    mov Stg[bx], cl ;word length
    cmp al, 32  ;space check
    jne Skip1  
    mov si, 0h
    add bx,10h  ;next word begin
    jmp Input
Skip1:
    inc si
    mov Stg[bx+si], al; char to array    
    cmp al, 13
    jne Input 
    mov Stg[bx+si], 0h;enter delete
    mov size, bx    ;number of words
    mov bx, 0h
Sort1:      ;sort by selection
    mov di, bx  ;max length index
    mov ax, bx
    add ax, 10h
Sort2:
    mov si, ax
    mov cl, Stg[si]
    cmp cl, Stg[di]
    jae Skip2   ;if<
    mov di, si
Skip2:
    add ax, 10h      
    cmp ax, size
    jbe Sort2
    mov si, 0h
Sort3:
    mov cl, Stg[bx+si]  ;words change
    mov al, Stg[di]
    mov Stg[bx+si], al
    mov Stg[di], cl
    inc si
    inc di
    cmp si, 10h
    jb Sort3
    add bx, 10h
    cmp bx, size
    jb Sort1
    mov ah, 02h ;cursor setting
    mov bh, 0h  ;number of page
    mov dh, 2h  ;number of line
    mov dl, 0h  ;number of column
    int 10h
    mov bx,0h
    mov si, 0h
    mov ah, 2h  ;char output
Output:     ;array output          
    inc si
    mov dx, word ptr Stg[bx+si]
    cmp dx, 0h
    jne Skip3
    cmp bx, size
    je Exit
    mov si, 0h
    add bx, 10h
    mov dx, ' '
    skip3:
    int 21h
    cmp bx, size
    jbe Output
Exit:
    mov ah, 4ch 
    int 21h    

end start 
